######
### Prometheus Monotring Stack
######
volumes: 
  prometheus_data: {}
  grafana_data: {}
  alertmanager_data: {}
  alertmanager_bot_data: {}

networks: 
  net:


prometheus:
  image: prom/prometheus
  container_name: prometheus
  restart: unless-stopped
  volumes:
    - ./prometheus/:/etc/prometheus/
    - prometheus_data:/prometheus
  command:
    - '--config.file=/etc/prometheus/prometheus.yml'
  ports:
    - '9090'
  networks:
    - net    

### AlertManager | Sends Alerts for Monitoring Events

alertmanager:
  container_name: alertmanager
  image: prom/alertmanager
  volumes:
    - ./alertmanager/:/etc/alertmanager/
    - alertmanager_data:/data
  command:
    - '--config.file=/prometheus/alertmanager.yml'
  networks:
    - net

# alertmanager-bot:
#   image: metalmatze/alertmanager-bot:latest
#   container_name: alertmanager-bot
#   restart: unless-stopped
#   environment:
#     - ALERTMANAGER_URL=http://alertmanager:9093
#     - BOLT_PATH=/data/bot.db
#     - STORE=bolt
#     - TELEGRAM_ADMIN= '92082263'
#     - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
#     - TEMPLATE_PATHS=/templates/default.tmpl
#   volumes:
#     - alertmanager_bot_data:/data
  
### Grafana | Visualization and Graphing Dashboard Manager

grafana:
  image: grafana/grafana
  container_name: grafana
  restart: unless-stopped
  volumes:
    - grafana_data:/var/lib/grafana
    - ./grafana/provisioning/:/etc/grafana/provisioning/
  environment:
    - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    - GF_INSTALL_PLUGINS=grafana-piechart-panel
    - GF_USERS_ALLOW_SIGN_UP=false
  depends_on:
    - prometheus
  networks:
    - net
    - traefik_proxy
  ports:
    - "3000:3000"
  labels: 
    - traefik.frontend.entryPoints=http,https
    - traefik.enable=true
    - "traefik.frontend.rule=Host:prometheus.lan"
    - traefik.port=3000
    - traefik.docker.network=traefik_proxy
